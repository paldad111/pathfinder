{"version":3,"sources":["webpack:///webpack/bootstrap 85fb40a142a001c2c596","webpack:///./maze.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB,EAAE;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC,mBAAmB,eAAe;AAClC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 85fb40a142a001c2c596","let maze = [[0,1,0,0,0,1],[0,0,0,1,0,1],[0,0,0,0,0,0],\n            [0,0,0,1,0,0],[0,1,0,0,0,0],[1,0,0,1,0,0]];\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let map = makeMap(maze, 19, 19);\n  let rendererOne = makeRenderer(map, 'bfs-graph', 'white', 'green');\n  let rendererTwo = makeRenderer(map, 'dfs-graph', 'white', 'blue');\n  drawMap(rendererOne, map);\n  drawMap(rendererTwo, map);\n\n  let startPos = [0,0];\n  let targetPos = [5,5];\n  let pathBFS = [];\n  let pathDFS = [];\n  drawPath(rendererOne, startPos, map.cellWidth, map.cellHeight, 'yellow');\n  drawPath(rendererOne, targetPos, map.cellWidth, map.cellHeight, '#0f0');\n});\n\nconst makeMap = (mazeData, width, height) => (\n    {\n      data: mazeData,\n  \t\twidth: mazeData[0].length,\n  \t\theight: mazeData.reduce(function(acc, row){ return acc + 1; }, 0),\n  \t\tcellWidth: width,\n  \t\tcellHeight: height\n    }\n);\n\nconst makeRenderer = (map, id, primaryColor, secondaryColor) => {\n  const canvasEl = document.getElementById(id);\n  canvasEl.width = map.cellWidth * map.width;\n\tcanvasEl.height = map.cellHeight * map.height;\n\treturn {\n\t\tcanvasEl: canvasEl,\n\t\tctx: canvasEl.getContext('2d'),\n\t\tprimaryColor: primaryColor,\n\t\tsecondaryColor: secondaryColor,\n\t};\n};\n\nconst drawMap = (renderer, map) => {\n    let ctx = renderer.ctx;\n  \tlet canvas = renderer.canvasEl;\n  \tctx.clearRect(0, 0, canvas.width, canvas.height);\n  \tfor (let y = 0; y < map.height; y++) {\n  \t\tfor (let x = 0; x < map.width; x++) {\n  \t\t\tlet cellType = map.data[y][x];\n  \t\t\tif (cellType === 1) {\n  \t\t\t\tctx.fillStyle = renderer.secondaryColor;\n  \t\t\t} else {\n  \t\t\t\tctx.fillStyle = renderer.primaryColor;\n  \t\t\t}\n  \t\t\tctx.fillRect(x * map.cellWidth, y * map.cellHeight,\n          map.cellWidth, map.cellHeight);\n        ctx.strokeStyle=\"black\";\n        ctx.strokeRect(x * map.cellWidth, y * map.cellHeight,\n          map.cellWidth, map.cellHeight);\n  \t\t}\n  \t}\n};\n\nconst drawPath = (renderer, point, width, height, color) => {\n  renderer.ctx.fillStyle = color;\n  renderer.ctx.fillRect(point[0] * width, point[1] * height, width, height);\n  renderer.ctx.strokeStyle=\"black\";\n  renderer.ctx.strokeRect(point[0] * width, point[1] * height, width, height);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./maze.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}